apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.yuwenming.flyvideo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro")
        //keep specific classes using proguard syntax
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }
    signingConfigs {
        release {
            keyAlias 'fly'
            keyPassword 'fly123'
            storePassword 'fly123'
            storeFile file('../keystore/fly.jks')
        }
        debug {
            keyAlias 'fly'
            keyPassword 'fly123'
            storePassword 'fly123'
            storeFile file('../keystore/fly.jks')
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            // 不显示Log
            signingConfig signingConfigs.release
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "false"
//            zipAlignEnabled false// 移除无用的resource文件
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardRules.pro'
            manifestPlaceholders = [
                    APP_IS_TEST_VALUE    : false,
                    HOST_URL_VALUE       : "http://tapi.nucarf.cn/V1/",
                    WECHAT_HOST_URL_VALUE: "https://wechat.nucarf.com",
                    JPUSH_PKGNAME        : "com.yuwenming.flyvideo",
                    JPUSH_APPKEY         : "502b8e17dc24899f6d66105a", //JPush 上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL        : "developer-default", //暂时填写默认值即可.
            ]
        }
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            //开启混淆
            minifyEnabled false
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //这里是给versionName添加后缀
//            versionNameSuffix "_debug"
            //是否进行代码格式化
//            zipAlignEnabled false
            // 移除无用的resource文件
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardRules.pro'
            manifestPlaceholders = [
                    APP_IS_TEST_VALUE    : true,
                    HOST_URL_VALUE       : "http://2019_0418_invoice_new.api.yidian.nucarf.cn/V1/",
                    WECHAT_HOST_URL_VALUE: "http://twechat.nucarf.cn",
                    JPUSH_PKGNAME        : "com.yuwenming.flyvideo",
                    JPUSH_APPKEY         : "502b8e17dc24899f6d66105a", //JPush 上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL        : "developer-default", //暂时填写默认值即可.
            ]
        }
    }


    dexOptions {
        preDexLibraries false
        // 支持大工程模式
        jumboMode true
        javaMaxHeapSize "4g"
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    packagingOptions {
        //出现这个问题是因为butterknife 与gradle 同时引用了annotation。
        exclude 'META-INF/services/javax.annotation.processing.Processor'

        exclude '*.apk'
        exclude 'META-INF/rxjava.properties'
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
greendao {
    schemaVersion 2 //数据库版本号
    daoPackage 'com.example.myapp.database.greenDao.db'
// 设置DaoMaster、DaoSession、Dao 包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    generateTests false //设置为true以自动生成单元测试。
    targetGenDirTests 'src/main/java' //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //数据库
    implementation 'org.greenrobot:greendao:3.2.2'
    //黄油刀
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    //内存泄漏监测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //弹框显示
    implementation 'com.afollestad.material-dialogs:input:2.0.0-rc4'
    //极光
    implementation 'cn.jiguang.sdk:jpush:3.2.0'
    // 此处以JPush 3.2.0 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.7'
    // 此处以JCore 1.2.7 版本为例。
    implementation project(':base')
    api 'com.google.android.material:material:1.0.0'

    //dagger2
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    implementation 'com.google.dagger:dagger-android:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.21'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    //热修改
    //tinker的核心库
//    implementation("com.tencent.tinker:tinker-android-lib:1.9.1") { changing = true }
    //可选，用于生成application类
//    annotationProcessor("com.tencent.tinker:tinker-android-anno:1.9.1") { changing = true }
//    compileOnly("com.tencent.tinker:tinker-android-anno:1.9.1") { changing = true }
    //若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") {
        changing = true
    }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") {
        changing = true
    }
    implementation project(path: ':apicloudlib')
}
apply from: 'tinkerpatch.gradle'
